print("‚òÜ" * 5 , " –ò–≥—Ä–∞ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏ –¥–ª—è –¥–≤–æ–∏—Ö! ", "‚òÜ" * 5)  # –ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã!

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Å–±—Ä–æ—Å–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
def reset_game_board():
    return list(range(1, 10))

# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â—É—é –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ.
def create_a_board(gameboard):
    print("ùÑñ" * 10)  # –í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞.
    for i in range(3):
        # –°—Ç—Ä–æ–∫–∏ —Å –∫–ª–µ—Ç–∫–∞–º–∏.
        print("|", gameboard[0 + i * 3], "|", gameboard[1 + i * 3], "|", gameboard[2 + i * 3], "|")
        print("ùÑñ" * 10)  # –ù–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞.

# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –≤—ã–±–æ—Ä–∞ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞.
def take_input(player_choice, game_board):
    valid = False
    # –°–æ–∑–¥–∞—ë–º —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –æ—à–∏–±–∫—É.
    while not valid:
        player_answer = input("–ö—É–¥–∞ –ø–æ—Å—Ç–∞–≤–∏–º " + player_choice + "? ")
        try:
            player_answer = int(player_answer)
        except ValueError:  # –ö–æ–Ω–∫—Ä–µ—Ç–∏–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—à–∏–±–∫–∏.
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ?")
            continue
        if 1 <= player_answer <= 9:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–µ—Ç–∫–∏ –Ω–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç—å.
            if str(game_board[player_answer - 1]) not in "XO":
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∏–≥—Ä–æ–∫–∞ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ.
                game_board[player_answer - 1] = player_choice
                valid = True
                print("–í–∞—à –≤—ã–±–æ—Ä –ø—Ä–∏–Ω—è—Ç! ")
            else:
                print("–≠—Ç–∞ –∫–ª–µ—Ç–∫–∞ —É–∂–µ –∑–∞–Ω—è—Ç–∞!")
        else:
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 9.")

# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–±–µ–¥—ã.
def check_win(board):
    win_combo = ((0, 1, 2), (3, 4, 5), (6, 7, 8), (0, 3, 6), (1, 4, 7), (2, 5, 8), (0, 4, 8), (2, 4, 6))
    for i in win_combo:
        if board[i[0]] == board[i[1]] == board[i[2]] != " ":
            return board[i[0]] # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∏–º–≤–æ–ª –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.
    return False

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–≥—Ä—ã
def play_game():
    game_board = reset_game_board()   # –°–±—Ä–æ—Å –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
    game_counter = 0
    win = False

    while not win and game_counter < len(game_board):
        create_a_board(game_board)   # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è

        if game_counter % 2 == 0:
            take_input("X", game_board)   # –•–æ–¥ –∏–≥—Ä–æ–∫–∞ X
        else:
            take_input("O", game_board)   # –•–æ–¥ –∏–≥—Ä–æ–∫–∞ O

        game_counter += 1

        if game_counter > 4:   # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø–æ–±–µ–¥—É –ø–æ—Å–ª–µ –ø–µ—Ä–≤—ã—Ö —á–µ—Ç—ã—Ä–µ—Ö —Ö–æ–¥–æ–≤
            winner = check_win(game_board)
            if winner:   # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å
                create_a_board(game_board)   # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –ø–µ—Ä–µ–¥ –≤—ã–≤–æ–¥–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                print(f"–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {winner}")
                win = True

            elif game_counter == len(game_board):   # –ò–ª–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∏—á—å—é (–µ—Å–ª–∏ –≤—Å–µ –∫–ª–µ—Ç–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã)
                create_a_board(game_board)
                print("–ù–∏—á—å—è!")

# –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–≥—Ä—ã
while True:
    play_game()

    play_again = input("–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç): ").strip().lower()
    if play_again != '–¥–∞':
        break

input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞!")